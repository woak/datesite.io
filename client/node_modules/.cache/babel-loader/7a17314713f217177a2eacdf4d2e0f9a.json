{"ast":null,"code":"// component selectors\n// import { List } from 'immutable';\nimport fetch from 'cross-fetch';\nimport createAsyncSelector from 'async-selector';\nexport var pageViewFocus = function pageViewFocus(state) {\n  return state.getIn(['homePageState', 'viewFocus'], \"home\");\n}; // ------------ADMIN------------ \\\\\n\nexport var adminUsername = function adminUsername(state) {\n  return state.getIn(['admin', 'username'], \"\");\n};\nexport var adminPassword = function adminPassword(state) {\n  return state.getIn(['admin', 'password'], \"\");\n}; // ------------EVENTS------------ \\\\\n\nvar fetchEvents = function fetchEvents() {\n  return fetch(\"/events\").then(function (response) {\n    return response.json();\n  }, function (error) {\n    return console.log(error);\n  }).then(function (json) {\n    return json.map(function (e) {\n      return {\n        \"title\": e.event_title,\n        \"start\": e.start_time,\n        \"end\": e.end_time\n      };\n    });\n  });\n};\n\nexport var devlinEventsList = createAsyncSelector({\n  sync: function sync() {\n    return [];\n  },\n  async: fetchEvents,\n  // TODO TEDDY: LOG EVENTS ON RESOLVE\n  onResolve: function onResolve(events, empty) {},\n  onReject: function onReject(error, empty) {\n    console.log(\"ERROR RETRIEVING EVENTS: \");\n    console.dir(error);\n  },\n  onCancel: function onCancel(promise, empty) {\n    console.log(\"PROMISE CANCELLED RETRIEVING EVENTS: \");\n    console.dir(promise);\n  }\n}, // anonymous selector:\n// only rerender when interacting with calendar\nfunction (state) {\n  return state.getIn(['homePageState', 'viewFocus']) === \"calendar\" ? state : null;\n});\nexport var stagedEventName = function stagedEventName(state) {\n  return state.getIn(['stagedEvent', 'name'], \"nameless event\");\n};\nexport var stagedEventStart = function stagedEventStart(state) {\n  return state.getIn(['stagedEvent', 'start'], Date());\n};\nexport var stagedEventEnd = function stagedEventEnd(state) {\n  return state.getIn(['stagedEvent', 'end'], Date());\n}; // ------------NEWS------------ \\\\\n\nexport var stagedNewsTitle = function stagedNewsTitle(state) {\n  return state.getIn(['stagedNews', 'title'], \"\");\n};\nexport var stagedNewsBody = function stagedNewsBody(state) {\n  return state.getIn(['stagedNews', 'body'], \"\");\n};\n\nvar fetchNews = function fetchNews() {\n  return fetch(\"/news\").then(function (response) {\n    return response.json();\n  }, function (error) {\n    return console.log(error);\n  }).then(function (json) {\n    console.log(\"NEWS: \");\n    console.dir(json);\n    return json;\n  });\n};\n\nexport var newsEntries = createAsyncSelector({\n  sync: function sync() {\n    return [];\n  },\n  async: fetchNews,\n  // TODO TEDDY: LOG NEWS ON RESOLVE\n  onResolve: function onResolve(news, empty) {},\n  onReject: function onReject(error, empty) {\n    console.log(\"ERROR RETRIEVING NEWS: \");\n    console.dir(error);\n  },\n  onCancel: function onCancel(promise, empty) {\n    console.log(\"PROMISE CANCELLED RETRIEVING NEWS: \");\n    console.dir(promise);\n  }\n}, // anonymous selector:\n// only rerender when interacting with news\nfunction (state) {\n  return state.getIn(['homePageState', 'viewFocus']) === \"news\" ? state : null;\n});","map":{"version":3,"sources":["/home/teddy/dev/practice/datesite.io/client/src/selectors/appSelector.js"],"names":["fetch","createAsyncSelector","pageViewFocus","state","getIn","adminUsername","adminPassword","fetchEvents","then","response","json","error","console","log","map","e","event_title","start_time","end_time","devlinEventsList","sync","async","onResolve","events","empty","onReject","dir","onCancel","promise","stagedEventName","stagedEventStart","Date","stagedEventEnd","stagedNewsTitle","stagedNewsBody","fetchNews","newsEntries","news"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,mBAAP,MAAgC,gBAAhC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CACpC,CAAC,eAAD,EAAkB,WAAlB,CADoC,EAEpC,MAFoC,CAAJ;AAAA,CAA3B,C,CAIP;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAF,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CACpC,CAAC,OAAD,EAAU,UAAV,CADoC,EAEpC,EAFoC,CAAJ;AAAA,CAA3B;AAKP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAH,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CACpC,CAAC,OAAD,EAAU,UAAV,CADoC,EAEpC,EAFoC,CAAJ;AAAA,CAA3B,C,CAKP;;AAEA,IAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAMP,KAAK,CAAC,SAAD,CAAL,CACvBQ,IADuB,CAClB,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GADU,EAElB,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAFa,EAGvBH,IAHuB,CAGlB,UAAAE,IAAI;AAAA,WAAIA,IAAI,CAACI,GAAL,CAAS,UAAAC,CAAC,EAAI;AACxB,aAAO;AACL,iBAASA,CAAC,CAACC,WADN;AAEL,iBAASD,CAAC,CAACE,UAFN;AAGL,eAAOF,CAAC,CAACG;AAHJ,OAAP;AAKH,KANa,CAAJ;AAAA,GAHc,CAAN;AAAA,CAApB;;AAWA,OAAO,IAAMC,gBAAgB,GAAGlB,mBAAmB,CACjD;AACEmB,EAAAA,IAAI,EAAE;AAAA,WAAM,EAAN;AAAA,GADR;AAEEC,EAAAA,KAAK,EAAEd,WAFT;AAGE;AACAe,EAAAA,SAAS,EAAE,mBAACC,MAAD,EAASC,KAAT,EAAmB,CAAE,CAJlC;AAKEC,EAAAA,QAAQ,EAAE,kBAACd,KAAD,EAAQa,KAAR,EAAkB;AAC1BZ,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,IAAAA,OAAO,CAACc,GAAR,CAAYf,KAAZ;AACD,GARH;AASEgB,EAAAA,QAAQ,EAAE,kBAACC,OAAD,EAAUJ,KAAV,EAAoB;AAC5BZ,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACAD,IAAAA,OAAO,CAACc,GAAR,CAAYE,OAAZ;AACD;AAZH,CADiD,EAejD;AACA;AACA,UAACzB,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAY,CAAC,eAAD,EAAkB,WAAlB,CAAZ,MAAgD,UAAhD,GACGD,KADH,GAEG,IAFd;AAAA,CAjBiD,CAA5C;AAuBP,OAAO,IAAM0B,eAAe,GAAG,SAAlBA,eAAkB,CAAA1B,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CACtC,CAAC,aAAD,EAAgB,MAAhB,CADsC,EAEtC,gBAFsC,CAAJ;AAAA,CAA7B;AAKP,OAAO,IAAM0B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA3B,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CACvC,CAAC,aAAD,EAAgB,OAAhB,CADuC,EAEvC2B,IAAI,EAFmC,CAAJ;AAAA,CAA9B;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA7B,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CACrC,CAAC,aAAD,EAAgB,KAAhB,CADqC,EAErC2B,IAAI,EAFiC,CAAJ;AAAA,CAA5B,C,CAKP;;AAEA,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAA9B,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAY,CAAC,YAAD,EAAe,OAAf,CAAZ,EAAqC,EAArC,CAAJ;AAAA,CAA7B;AAEP,OAAO,IAAM8B,cAAc,GAAG,SAAjBA,cAAiB,CAAA/B,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAY,CAAC,YAAD,EAAe,MAAf,CAAZ,EAAoC,EAApC,CAAJ;AAAA,CAA5B;;AAEP,IAAM+B,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMnC,KAAK,CAAC,OAAD,CAAL,CACrBQ,IADqB,CAChB,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GADQ,EAEhB,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAFW,EAGrBH,IAHqB,CAGhB,UAAAE,IAAI,EAAI;AAACE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAAuBD,IAAAA,OAAO,CAACc,GAAR,CAAYhB,IAAZ;AAAmB,WAAOA,IAAP;AAAY,GAH/C,CAAN;AAAA,CAAlB;;AAKA,OAAO,IAAM0B,WAAW,GAAGnC,mBAAmB,CAC5C;AACEmB,EAAAA,IAAI,EAAE;AAAA,WAAM,EAAN;AAAA,GADR;AAEEC,EAAAA,KAAK,EAAEc,SAFT;AAGE;AACAb,EAAAA,SAAS,EAAE,mBAACe,IAAD,EAAOb,KAAP,EAAiB,CAAE,CAJhC;AAKEC,EAAAA,QAAQ,EAAE,kBAACd,KAAD,EAAQa,KAAR,EAAkB;AAC1BZ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACc,GAAR,CAAYf,KAAZ;AACD,GARH;AASEgB,EAAAA,QAAQ,EAAE,kBAACC,OAAD,EAAUJ,KAAV,EAAoB;AAC5BZ,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAD,IAAAA,OAAO,CAACc,GAAR,CAAYE,OAAZ;AACD;AAZH,CAD4C,EAe5C;AACA;AACA,UAACzB,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAY,CAAC,eAAD,EAAkB,WAAlB,CAAZ,MAAgD,MAAhD,GACGD,KADH,GAEG,IAFd;AAAA,CAjB4C,CAAvC","sourcesContent":["// component selectors\n// import { List } from 'immutable';\nimport fetch from 'cross-fetch'\nimport createAsyncSelector from 'async-selector'\n\nexport const pageViewFocus = state => state.getIn(\n  ['homePageState', 'viewFocus'],\n  \"home\");\n\n// ------------ADMIN------------ \\\\\n\nexport const adminUsername = state => state.getIn(\n  ['admin', 'username'],\n  \"\"\n)\n\nexport const adminPassword = state => state.getIn(\n  ['admin', 'password'],\n  \"\"\n)\n\n// ------------EVENTS------------ \\\\\n\nconst fetchEvents = () => fetch(\"/events\")\n  .then(response => response.json(), \n        error => console.log(error))\n  .then(json => json.map(e => {\n      return {\n        \"title\": e.event_title,\n        \"start\": e.start_time,\n        \"end\": e.end_time\n      }\n  }));\n\nexport const devlinEventsList = createAsyncSelector(\n  {\n    sync: () => [],\n    async: fetchEvents,\n    // TODO TEDDY: LOG EVENTS ON RESOLVE\n    onResolve: (events, empty) => {},\n    onReject: (error, empty) => {\n      console.log(\"ERROR RETRIEVING EVENTS: \");\n      console.dir(error);\n    },\n    onCancel: (promise, empty) => {\n      console.log(\"PROMISE CANCELLED RETRIEVING EVENTS: \");\n      console.dir(promise);\n    }\n  },\n  // anonymous selector:\n  // only rerender when interacting with calendar\n  (state) => state.getIn(['homePageState', 'viewFocus']) === \"calendar\" \n              ? state \n              : null,\n);\n\n\nexport const stagedEventName = state => state.getIn(\n  ['stagedEvent', 'name'],\n  \"nameless event\"\n);\n\nexport const stagedEventStart = state => state.getIn(\n  ['stagedEvent', 'start'],\n  Date()\n);\n\nexport const stagedEventEnd = state => state.getIn(\n  ['stagedEvent', 'end'],\n  Date()\n);\n\n// ------------NEWS------------ \\\\\n\nexport const stagedNewsTitle = state => state.getIn(['stagedNews', 'title'], \"\")\n\nexport const stagedNewsBody = state => state.getIn(['stagedNews', 'body'], \"\")\n\nconst fetchNews = () => fetch(\"/news\")\n  .then(response => response.json(), \n        error => console.log(error))\n  .then(json => {console.log(\"NEWS: \"); console.dir(json); return json});\n\nexport const newsEntries = createAsyncSelector(\n  {\n    sync: () => [],\n    async: fetchNews,\n    // TODO TEDDY: LOG NEWS ON RESOLVE\n    onResolve: (news, empty) => {},\n    onReject: (error, empty) => {\n      console.log(\"ERROR RETRIEVING NEWS: \");\n      console.dir(error);\n    },\n    onCancel: (promise, empty) => {\n      console.log(\"PROMISE CANCELLED RETRIEVING NEWS: \");\n      console.dir(promise);\n    }\n  },\n  // anonymous selector:\n  // only rerender when interacting with news\n  (state) => state.getIn(['homePageState', 'viewFocus']) === \"news\" \n              ? state \n              : null,\n);\n"]},"metadata":{},"sourceType":"module"}