{"ast":null,"code":"import _classCallCheck from \"/home/teddy/dev/practice/datesite.io/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/teddy/dev/practice/datesite.io/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/teddy/dev/practice/datesite.io/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/teddy/dev/practice/datesite.io/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/teddy/dev/practice/datesite.io/client/src/App.js\";\n\n/*\n src/App.js\n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // redux imports\n\nimport { actions } from './actions/appAction';\nimport * as componentSelectors from './selectors/appSelector';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"HELLO WORLD\"));\n    };\n\n    return _this;\n  }\n\n  return App;\n}(Component);\n\nvar pageViewFocus = componentSelectors.pageViewFocus,\n    devlinEventsList = componentSelectors.devlinEventsList,\n    newsEntries = componentSelectors.newsEntries;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentFocus: pageViewFocus(state),\n    eventsList: devlinEventsList(state),\n    newsList: newsEntries(state)\n  };\n};\n\nvar changePageView = actions.changePageView,\n    adminUsername = actions.adminUsername,\n    adminPassword = actions.adminPassword,\n    bandmemberLogin = actions.bandmemberLogin,\n    _addEvent = actions.addEvent,\n    stagedEventName = actions.stagedEventName,\n    stagedEventStart = actions.stagedEventStart,\n    stagedEventEnd = actions.stagedEventEnd,\n    _addNews = actions.addNews,\n    _addNewsTitle = actions.addNewsTitle,\n    _addNewsBody = actions.addNewsBody;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    switchViewTo: function switchViewTo(target) {\n      return dispatch(changePageView(target));\n    },\n    inputAdminUsername: function inputAdminUsername(value) {\n      return dispatch(adminUsername(value));\n    },\n    inputAdminPassword: function inputAdminPassword(value) {\n      return dispatch(adminPassword(value));\n    },\n    loginBandmember: function loginBandmember() {\n      return dispatch(bandmemberLogin());\n    },\n    addNameToStagedEvent: function addNameToStagedEvent(value) {\n      return dispatch(stagedEventName(value));\n    },\n    addStartTimeToStagedEvent: function addStartTimeToStagedEvent(value) {\n      return dispatch(stagedEventStart(value));\n    },\n    addEndTimeToStagedEvent: function addEndTimeToStagedEvent(value) {\n      return dispatch(stagedEventEnd(value));\n    },\n    addEvent: function addEvent() {\n      return dispatch(_addEvent());\n    },\n    addNews: function addNews() {\n      return dispatch(_addNews());\n    },\n    addNewsTitle: function addNewsTitle(value) {\n      return dispatch(_addNewsTitle(value));\n    },\n    addNewsBody: function addNewsBody(value) {\n      return dispatch(_addNewsBody(value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/teddy/dev/practice/datesite.io/client/src/App.js"],"names":["React","Component","connect","actions","componentSelectors","App","render","pageViewFocus","devlinEventsList","newsEntries","mapStateToProps","state","currentFocus","eventsList","newsList","changePageView","adminUsername","adminPassword","bandmemberLogin","addEvent","stagedEventName","stagedEventStart","stagedEventEnd","addNews","addNewsTitle","addNewsBody","mapDispatchToProps","dispatch","switchViewTo","target","inputAdminUsername","value","inputAdminPassword","loginBandmember","addNameToStagedEvent","addStartTimeToStagedEvent","addEndTimeToStagedEvent"],"mappings":"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","sourcesContent":["/*\n src/App.js\n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// redux imports\nimport { actions } from './actions/appAction';\nimport * as componentSelectors from './selectors/appSelector';\n\nimport './App.css';\n\nclass App extends Component {\n\n  render = () => (\n    <div className=\"App\">\n      <p>HELLO WORLD</p>\n    </div>\n  );\n}\n\nconst {\n  pageViewFocus,\n  devlinEventsList,\n  newsEntries,\n} = componentSelectors\n\nconst mapStateToProps = state => ({\n  currentFocus: pageViewFocus(state),\n  eventsList: devlinEventsList(state),\n  newsList: newsEntries(state),\n});\n\nconst {\n  changePageView,\n\n  adminUsername,\n  adminPassword,\n  bandmemberLogin,\n\n  addEvent,\n  stagedEventName,\n  stagedEventStart,\n  stagedEventEnd,\n\n  addNews,\n  addNewsTitle,\n  addNewsBody,\n} = actions;\n\nconst mapDispatchToProps = dispatch => ({\n  switchViewTo: target => dispatch(changePageView(target)),\n  inputAdminUsername: value => dispatch(adminUsername(value)),\n  inputAdminPassword: value => dispatch(adminPassword(value)),\n  loginBandmember: () => dispatch(bandmemberLogin()),\n\n  addNameToStagedEvent: value => dispatch(stagedEventName(value)),\n  addStartTimeToStagedEvent: value => dispatch(stagedEventStart(value)),\n  addEndTimeToStagedEvent: value => dispatch(stagedEventEnd(value)),\n  addEvent: () => dispatch(addEvent()),\n\n  addNews: () => dispatch(addNews()),\n  addNewsTitle: value => dispatch(addNewsTitle(value)),\n  addNewsBody: value => dispatch(addNewsBody(value)),\n});\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\n\n"]},"metadata":{},"sourceType":"module"}